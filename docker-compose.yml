version: '3'

# Sometimes we need to remove old images after making change , so run docker-compose rm
services:
  zookeeper:
    image: zookeeper:3.4.10 #packed with kafka 1.0.2
    hostname: zookeeper
    ports:
    - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
#    volumes:
#    - ./zk-single-kafka-single/zoo1/data:/data
#    - ./zk-single-kafka-single/zoo1/datalog:/datalog

  kafka:
    image: wurstmeister/kafka:2.11-1.0.2
    hostname: kafka
    ports:
    - "9092:9092"
    environment:
      KAFKA_LISTENERS: LISTENER_DOCKER_EXTERNAL://:9092,LISTENER_DOCKER_INTERNAL://:19092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    volumes:
#    - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
    - zookeeper

  postgres:
    image: postgres:10.4
    hostname: postgres
    ports:
    - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: "queue"

  # migration assumes you have queue-controller checked out in /tmp/queue
  migration:
    image: golang:1.11-alpine
#    environment:
#      CONTROLLER_DB_URL: "sslmode=disable user=postgres host=postgres dbname=queue"
    command: >
      /bin/sh -c "apk add --no-cache git &&
      go get -v github.com/pressly/goose/cmd/goose &&
      cd /tmp/queue &&
      goose -dir app/controller/db/migrations postgres 'sslmode=disable user=postgres host=postgres dbname=queue' up"
    depends_on:
    - postgres
    volumes:
    - /tmp:/tmp

  # make sure you could pull images from quay.do docker login quay.io prior.
  controller:
    image: quay.io/alokic/queue-controller:master
    hostname: controller
    ports:
    - "4000:4000"
    environment:
      CONTROLLER_ENV: "production"
      CONTROLLER_DB_URL: "sslmode=disable user=postgres host=postgres dbname=queue"
    depends_on:
    - migration

  # make sure you could pull images from quay.do docker login quay.io prior.
  dispatcher:
    image: quay.io/alokic/queue-dispatcher:master
    hostname: controller
    ports:
    - "4001:4001"
    environment:
      DISPATCHER_ENV: "production"
      DISPATCHER_CONTROLLER_URL: "http://controller:4000"
      DISPATCHER_NATIVE_QUEUE_ADDRESS: "kafka:19092"
      DISPATCHER_CONTROLLER_SYNC_INTERVAL: 1000
    depends_on:
    - controller
